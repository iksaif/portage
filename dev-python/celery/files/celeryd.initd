#!/sbin/runscript
# Copyright 1999-2011 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: $

opts="${opts} reload"

depend() {
        need net
	use rabbitmq logger dns
}

DEFAULT_PID_FILE="/var/run/celery/celeryd@%n.pid"
DEFAULT_LOG_FILE="/var/log/celery/celeryd@%n.log"
DEFAULT_LOG_LEVEL="INFO"
DEFAULT_NODES="celery"
DEFAULT_CELERYD="-m celery.bin.celeryd_detach"

CELERYD_PID_FILE=${CELERYD_PID_FILE:-${CELERYD_PIDFILE:-$DEFAULT_PID_FILE}}
CELERYD_LOG_FILE=${CELERYD_LOG_FILE:-${CELERYD_LOGFILE:-$DEFAULT_LOG_FILE}}
CELERYD_LOG_LEVEL=${CELERYD_LOG_LEVEL:-${CELERYD_LOGLEVEL:-$DEFAULT_LOG_LEVEL}}
CELERYD_MULTI=${CELERYD_MULTI:-"celeryd-multi"}
CELERYD=${CELERYD:-$DEFAULT_CELERYD}
CELERYD_NODES=${CELERYD_NODES:-$DEFAULT_NODES}

export CELERY_LOADER

CELERYD_OPTS="$CELERYD_OPTS --logfile $CELERYD_LOG_FILE --loglevel $CELERYD_LOG_LEVEL"

CELERYD_LOG_DIR=`dirname $CELERYD_LOG_FILE`
CELERYD_PID_DIR=`dirname $CELERYD_PID_FILE`
if [ ! -d "$CELERYD_LOG_DIR" ]; then
	mkdir -p $CELERYD_LOG_DIR
fi
if [ ! -d "$CELERYD_PID_DIR" ]; then
	mkdir -p $CELERYD_PID_DIR
fi

# Extra start-stop-daemon options, like user/group.
if [ -n "$CELERYD_USER" ]; then
	DAEMON_OPTS="$DAEMON_OPTS --uid=$CELERYD_USER"
	chown "$CELERYD_USER" $CELERYD_LOG_DIR $CELERYD_PID_DIR
fi
if [ -n "$CELERYD_GROUP" ]; then
	DAEMON_OPTS="$DAEMON_OPTS --gid=$CELERYD_GROUP"
	chown ":$CELERYD_GROUP" $CELERYD_LOG_DIR $CELERYD_PID_DIR
fi

if [ -n "$CELERYD_CHDIR" ]; then
	DAEMON_OPTS="$DAEMON_OPTS --workdir=\"$CELERYD_CHDIR\""
fi

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

check_dev_null() {
	if [ ! -c /dev/null ]; then
		eerror "/dev/null is not a character device!"
		return 1
	fi
	return 05B
}

stop_workers () {
	$CELERYD_MULTI stop $CELERYD_NODES --pidfile="$CELERYD_PID_FILE"
}


start_workers () {
	$CELERYD_MULTI start $CELERYD_NODES $DAEMON_OPTS        \
                --pidfile="$CELERYD_PID_FILE"      \
                --logfile="$CELERYD_LOG_FILE"      \
                --loglevel="$CELERYD_LOG_LEVEL"    \
                --cmd="$CELERYD"                   \
                $CELERYD_OPTS
}


restart_workers () {
	$CELERYD_MULTI restart $CELERYD_NODES $DAEMON_OPTS      \
                --pidfile="$CELERYD_PID_FILE"    \
                --logfile="$CELERYD_LOG_FILE"    \
                --loglevel="$CELERYD_LOG_LEVEL"  \
                --cmd="$CELERYD"                 \
                $CELERYD_OPTS
}

start() {
	check_dev_null || return 1

	ebegin "Starting ${SVCNAME}"
	start_workers
	eend $?
}

stop() {
	ebegin "Stopping ${SVCNAME}"
	stop_workers
	eend $?
}

reload() {
	check_dev_null || return 1

	ebegin "Restarting ${SVCNAME}"
	restart_workers
	eend $?
}

status() {
	celeryctl status
}
